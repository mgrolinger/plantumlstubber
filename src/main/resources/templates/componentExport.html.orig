@startuml [(${isRootService} ?  ${applicationName} : ${applicationName}+'_'+${serviceName})]_[[${interfaceName}]]
' generated on [[${dateCreated}]]
'!define DETAILED
'!define UML_STRICT
'!define SHOW_LAST_UPDATED
!include_many [[${commonPath}]]common/common.iuml
'Definition of the components
!ifndef [[${#strings.toUpperCase(applicationName)}]]_COMPONENT_CREATED
    !ifndef [[${#strings.toUpperCase(applicationName)}]]_COMPONENT
        !define [[${#strings.toUpperCase(applicationName)}]]_COMPONENT component "**[[${applicationName}]]**\nPlease define\nthe component \nin **common.iuml**" as [[${#strings.toLowerCase(applicationNameShort)}]] #Red
    !endif
     [[${#strings.toUpperCase(applicationName)}]]_COMPONENT
    !define [[${#strings.toUpperCase(applicationName)}]]_COMPONENT_CREATED true
!endif
<<<<<<< HEAD

!ifdef DETAILED
    !ifndef [[${#strings.toUpperCase(applicationName)}]]_[(${isRootService} ? '' : ${#strings.toUpperCase(serviceName)})]_API_[[${#strings.toUpperCase(interfaceName)}]]_CREATED
        interface "[(${integrationType})]\n[[${#strings.capitalize(interfaceName)}]]" as [[${#strings.capitalize(applicationName)}]][[${isRootService} ?  '' : ${#strings.capitalize(serviceName)}]][[${#strings.capitalize(interfaceName)}]]Int [(${colorType})]
        [[${#strings.toLowerCase(applicationNameShort)}]]  -[#[[${#strings.toUpperCase(connectionColor)}]]]-  [[${#strings.capitalize(applicationName)}]][[${isRootService} ?  '' : ${#strings.capitalize(serviceName)}]][[${#strings.capitalize(interfaceName)}]]Int
        !define [[${#strings.toUpperCase(applicationName)}]]_[(${isRootService} ? '' : ${#strings.toUpperCase(serviceName)})]_API_[[${#strings.toUpperCase(interfaceName)}]]_CREATED true
=======
!ifndef [[${API_CREATED}]]
    !ifdef DETAILED
        interface "[(${componentIntegrationType})]\n[[${interfaceName}]]" as [[${COMPLETE_INTERFACE_PATH}]] [(${colorType})]
        [[${#strings.toLowerCase(applicationNameShort)}]] -[single,#[[${#strings.toUpperCase(connectionColor)}]]]- [[${COMPLETE_INTERFACE_PATH}]] LUPDATE([[${dateCreated}]])
    !else
        ' define application as interface endpoint for mixed detailed/non-detailed views.
        !define [[${COMPLETE_INTERFACE_PATH}]] [[${#strings.toLowerCase(applicationNameShort)}]]
>>>>>>> ec246554049815498771813afc304b06eb9b351a
    !endif
    !define [[${API_CREATED}]] true
!endif
<<<<<<< HEAD
' Import subsequent services here to prevent double lines

' TODO
note as implNote[(${applicationName})][(${interfaceName})] #Red
[(${applicationName})][(${interfaceName})] is a generated stub.
PLEASE remove this after checking
if all calls are included.
end note
[[${#strings.toLowerCase(applicationNameShort)}]] .. implNote[(${applicationName})][(${interfaceName})]

' Methods go here
' Import and method calls
!definelong [(${isRootService} ?  ${applicationName} : ${applicationName}+'_'+${serviceName})]_[[${interfaceName}]](CALLER="\[consumer[(${#strings.capitalize(interfaceName)})]\]",CONNECTION_COLOR="DarkSlateGrey")
    !ifdef DETAILED
        CALLER ..[#CONNECTION_COLOR]..( [[${#strings.capitalize(applicationName)}]][[${isRootService} ?  '' : ${#strings.capitalize(serviceName)}]][[${#strings.capitalize(interfaceName)}]]Int
    !else
        CALLER --[dashed,#CONNECTION_COLOR]-->> [[${#strings.toLowerCase(applicationNameShort)}]]
=======
'Includes to subsequent services go here

' FIXME REMOVE THIS AFTER CHECK
!ifdef SHOW_TODO
    ' TODO
    note as implNote[(${applicationName})][(${interfaceName})] #Red
    [(${COMPLETE_INTERFACE_PATH})]
    is a generated stub.
    PLEASE remove this after checking
    if all calls are included.
    end note
    [[${#strings.toLowerCase(applicationNameShort)}]] .. implNote[(${applicationName})][(${interfaceName})]
!endif

' Methods go here
!definelong [(${isRootService} ?  ${applicationName} : ${applicationName}+'_'+${serviceName})]_[[${interfaceName}]](CALLER="consumer[(${#strings.capitalize(interfaceName)})]",[[${#strings.toUpperCase(interfaceName)}]]_CONNECTION_COLOR="DarkSlateGrey")
    !ifdef DETAILED
        CALLER ..[single,#[[${#strings.toUpperCase(interfaceName)}]]_CONNECTION_COLOR]..> [[${COMPLETE_INTERFACE_PATH}]]
    !else
        CALLER --[dashed,single,#[[${#strings.toUpperCase(interfaceName)}]]_CONNECTION_COLOR]-->> [[${#strings.toLowerCase(applicationNameShort)}]]
>>>>>>> ec246554049815498771813afc304b06eb9b351a
    !endif
!enddefinelong
@enduml