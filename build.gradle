plugins {
    id "idea"
    id "java"
    id 'org.springframework.boot' version '2.2.5.RELEASE'
}

repositories {
    mavenLocal()
    mavenCentral()
}

description = "PlantUML iuml file generator"
group = "com.grolinger.java"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "1.8"
buildDir = "target"

dependencies {
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:2.2.5.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-web:2.2.5.RELEASE"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.6"
    compile "org.apache.commons:commons-lang3:3.7"
    compile "io.springfox:springfox-swagger2:2.9.2"
    compile "io.springfox:springfox-swagger-ui:2.9.2"
    //runtime "com.h2database:h2:1.4.197"
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompile "org.springframework.boot:spring-boot-starter-test:2.2.5.RELEASE"
    testCompile "org.testng:testng:7.1.0"

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    implementation "org.springframework.boot:spring-boot-starter"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

test {
    useTestNG()
}

springBoot {
    mainClassName = "com.grolinger.java.ServiceGenerator"
}

bootRun {
    main = "com.grolinger.java.ServiceGenerator"
    classpath = sourceSets.main.runtimeClasspath
}

task bootRunConsole(type: org.springframework.boot.gradle.tasks.run.BootRun, dependsOn: build) {
    doFirst {
        systemProperty("spring.profiles.active", "Console") // Prevents web runner "auto running" console runner at startup.
                                                            // TODO: Refactor: Is there any elegant way to achieve this?
        main = "com.grolinger.java.ServiceGeneratorConsole"
        classpath = sourceSets.main.runtimeClasspath
    }
}

task genCompV1(dependsOn: bootRunConsole) {
    bootRunConsole.configure {
        args = ["COMP", "1"]
    }
}

task genCompV2(dependsOn: bootRunConsole) {
    bootRunConsole.configure {
        args = ["COMP", "2"]
    }
}

task genSeqV1(dependsOn: bootRunConsole) {
    bootRunConsole.configure {
        args = ["SEQ", "1"]
    }
}

task genSeqV2(dependsOn: bootRunConsole) {
    bootRunConsole.configure {
        args = ["SEQ", "2"]
    }
}
